let noDataContainer, dataContainer, tableBodyContainer, btnNew, btnSave, btnDelete, modalForm, modalDelete, deleteId, editMode = !1; function createTable(e) { new Tabulator("#files-table", { data: e, height: "600px", layout: "fitColumns", pagination: "local", paginationSize: 10, movableColumns: !0, columns: [{ title: "File Type", field: "FileType", width: 200 }, { title: "Allowed Extensions", field: "AllowedExtensions", width: 750 }, { title: "", field: "FileId", headerSort: !1, formatter: addButtons }] }) } $(document).ready(function () { setDomInVariables(), btnNew.click(function () { editMode = !1, modalForm.modal("show") }), btnSave.click(function () { saveFile(getDataByForm()) }), btnDelete.click(function () { deleteFile() }), modalForm.on("show.bs.modal", function (e) { cleanForm() }), modalForm.on("hide.bs.modal", function (e) { getFiles() }), modalDelete.on("hide.bs.modal", function (e) { getFiles() }), getFiles() }); const addButtons = function (e) { return `<button class="btn btn-warning" onclick="getFile('${e._cell.value}')" title="Edit"><i class="fas fa-edit"></i></button>\n     <button class="btn btn-danger" onclick="showDeletePopup('${e._cell.value}')" title="Delete"><i class="fas fa-trash-alt"></i></button>` }; function setDomInVariables() { noDataContainer = $(".no-data"), dataContainer = $(".file-data"), tableBodyContainer = $("#file-table-body"), btnNew = $(".new-file"), btnSave = $("#btnSave"), btnDelete = $("#btnDelete"), modalForm = $("#formModal"), modalDelete = $("#deleteModal") } function getDataByForm() { const e = {}, t = $('input[type="text"]'); for (input of (e.FileId = $('input[type="hidden"]')[0].value, t)) e[input.name] = input.value; const a = $("textarea"); for (textArea of a) e[textArea.name] = textArea.value; return e } function setDataForm(e) { for (prop in editMode = !0, $('input[type="hidden"]').val(e.FileId), e) "FileId" !== prop && $(`[name='${prop}']`).val(e[prop]) } function cleanForm() { const e = $('input[type="text"]'); for (input of e) input.value = ""; const t = $("textarea"); for (textArea of t) textArea.value = ""; $(".danger-container-modal").html("") } function showDeletePopup(e) { deleteId = e, modalDelete.modal("show") } function getFiles() { $.ajax({ method: "GET", url: "/File/GetFiles", success: function (e) { e.length > 0 ? (createTable(e), dataContainer.show()) : (noDataContainer.show(), dataContainer.hide()) }, fail: function () { cleanMessages(), console.log("Error"), showAlert("danger", "An error has ocurred, please contact with the systems administrator") } }) } function getFile(e) { $.ajax({ method: "GET", url: `/File/GetFile/${e}`, success: function (e) { modalForm.modal("show"), setDataForm(e) }, fail: function () { cleanMessages(), console.log("Error"), showAlert("danger", "An error has ocurred, please contact with the systems administrator") } }) } function saveFile(e) { $.ajax({ method: "POST", url: "/File/MaintenanceFile", data: e, success: function (e) { switch (e.Message) { case "Created": showAlert("success", "The record has been successfully created"), modalForm.modal("hide"); break; case "Updated": showAlert("success", "The record has been successfully updated"), modalForm.modal("hide"); break; case "Error": let t = createErrorMessageValidation(e.Errors); showAlert("danger-modal", t) } }, fail: function () { cleanMessages(), console.log("Error"), showAlert("danger", "An error has ocurred, please contact with the systems administrator") } }) } function deleteFile() { $.ajax({ method: "POST", url: `/File/DeleteFile/${deleteId}`, success: function (e) { switch (e.Result) { case "Success": showAlert("success", "The record has been successfully deleted"), modalDelete.modal("hide"); break; case "NotFound": showAlert("warning", "There is not record with that information"), modalDelete.modal("hide") } }, fail: function () { cleanMessages(), console.log("Error"), showAlert("danger", "An error has ocurred, please contact with the systems administrator") } }) }